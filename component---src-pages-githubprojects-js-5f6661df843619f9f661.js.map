{"version":3,"sources":["webpack://cara/./node_modules/node-fetch/browser.js","webpack://cara/./src/pages/githubprojects.js"],"names":["global","self","window","Error","getGlobal","module","exports","fetch","default","bind","Headers","Request","Response","myComponent","props","state","error","isLoaded","items","componentDidMount","then","res","json","result","console","log","setState","render","this","message","map","item","key","id","name","price","React"],"mappings":"+FAEA,IAmBIA,EAnBY,WAId,GAAoB,oBAATC,KACT,OAAOA,KAGT,GAAsB,oBAAXC,OACT,OAAOA,OAGT,QAAsB,IAAXF,EACT,OAAOA,EAGT,MAAM,IAAIG,MAAM,kCAGLC,GACbC,EAAOC,QAAUA,EAAUN,EAAOO,MAE9BP,EAAOO,QACTD,EAAQE,QAAUR,EAAOO,MAAME,KAAKT,IAGtCM,EAAQI,QAAUV,EAAOU,QACzBJ,EAAQK,QAAUX,EAAOW,QACzBL,EAAQM,SAAWZ,EAAOY,U,oFCLpBC,G,oBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALQ,G,uCAQnBC,kBAAA,WAAqB,IAAD,OAClBZ,IAAM,6CACHa,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZT,UAAU,EACVC,MAAOK,OAMX,SAACP,GACC,EAAKU,SAAS,CACZT,UAAU,EACVD,c,EAQVW,OAAA,WACE,MAAmCC,KAAKb,MAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MACzB,OAAIF,EACK,qCAAaA,EAAMa,SAChBZ,EAGF,CACN,0DACA,0BACGC,EAAMY,KAAI,SAAAC,GAAI,OACb,sBAAIC,IAAKD,EAAKE,IACXF,EAAKG,KADR,IACeH,EAAKI,YAPnB,0C,GAvCaC,cAuD1B","file":"component---src-pages-githubprojects-js-5f6661df843619f9f661.js","sourcesContent":["\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar global = getGlobal();\nmodule.exports = exports = global.fetch; // Needed for TypeScript and Webpack.\n\nif (global.fetch) {\n  exports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","// Step 1: Import React\n// import * as React from 'react'\n// import { title } from './githubprojects.module.css'\n// Step 2: Define your component\n// const IndexPage = () => {\n//   return (\n//     <main className={title}>\n//       <title >Home Page</title>\n//       <h1  className={title} >Welcome to my Gatsby site!</h1>\n//       <p className={title} >I'm making this by following the Gatsby Tutorial.</p>\n      \n//       </main>\n//   )\n// }\n\n// Step 3: Export your component\n// export default IndexPage\n\nimport * as React from 'react'\nimport  { Component } from 'react';\n\nimport fetch from 'node-fetch'\nimport ReactDOM from 'react-dom'\n\n\nclass myComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://api.github.com/users/autsav/repos\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return ([\n        <h3>All my repository lists are:</h3>,\n        <ul>\n          {items.map(item => (\n            <li key={item.id}>\n              {item.name} {item.price}\n            </li>\n          ))}\n        </ul>\n          ]);\n    }\n  }\n}\n\nexport default myComponent;"],"sourceRoot":""}